#!/usr/bin/env bash
# set -x # Print commands as they are printed
set -e # Exit on any errors

cd -- "$( dirname -- "${BASH_SOURCE[0]}" )/../"
# cd "$HOME/dotfiles"

POSITIONAL_ARGS=()
while [[ $# -gt 0 ]]; do
  case $1 in
    -r|--rescue)
      RESCUE="YES"
      shift # past argument
      ;;
    -p|--pull)
      PULL="YES"
      shift # past argument
      ;;
    -u|--upgrade)
      UPGRADE="YES"
      shift # past argument
      ;;
    -t|--show-trace)
      TRACE="--show-trace"
      shift # past argument
      ;;
    -c|--clean)
      CLEAN="YES"
      shift # past argument
      ;;
    # -s|--search)
    #   SEARCHPATH="$2"
    #   shift # past argument
    #   shift # past value
    #   ;;
    -*|--*)
      echo "Unknown option $1"

      echo "Usage: reload [options] [new-hostname]"
      echo
      echo "Options:"
      echo "  -u, --upgrade     Add pull updates from upstream and update lockfile"
      echo "  -t, --show-trace  Pass --show-trace to rebuild command (for debuggin)"
      echo "  -P, --pull        Pull updates from git before updating"
      echo "  -c, --clean       Garbage collect the nix store and exit (more info at https://nixos.wiki/wiki/Cleaning_the_nix_store)"
      # echo
      # echo "To Impliment:"
      # echo "  -p, --push     Commit and push all changes"
      # echo "  -d, --dry-run  Don't rebuild"
      exit 1
      ;;
    *)
      POSITIONAL_ARGS+=("$1") # save positional arg
      shift # past argument
      ;;
  esac
done

set -- "${POSITIONAL_ARGS[@]}" # restore positional parameters

NEW_HOSTNAME="$1"

if [ "$CLEAN" == "YES" ]; then
  nix-store --gc
  exit 0
fi

if [ "$PULL" == "YES" ]; then
  git pull
fi

if [ "$UPGRADE" == "YES" ]; then
  nix flake update
fi

if [ "$RESCUE" != "YES" ]; then
  UNTRACKED_FILES=$(git ls-files -o --exclude-standard)
  if [ -n "$UNTRACKED_FILES" ]; then
    git add "$UNTRACKED_FILES" # Add all untracked files
  fi
fi

# rm /home/alice/.config/mimeapps.list # Gets overwritten by setting defaults in Thunar
nixos-rebuild switch --use-remote-sudo $TRACE --flake ./#$NEW_HOSTNAME
