[
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "ctrl+enter",
    "command": "editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "ctrl+alt+enter",
    "command": "-editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "ctrl+enter",
    "command": "search.action.replaceAll",
    "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
  },
  {
    "key": "ctrl+alt+enter",
    "command": "-search.action.replaceAll",
    "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
  },
  {
    "key": "ctrl+shift+i",
    "command": "editor.action.reindentlines"
  },
  {
    "key": "ctrl+k space",
    "command": "editor.action.indentationToSpaces"
  },
  {
    "key": "ctrl+k tab",
    "command": "editor.action.indentationToTabs"
  },
  {
    "key": "ctrl+k c",
    "command": "-workbench.files.action.compareWithClipboard"
  },
  {
    "key": "ctrl+k c",
    "command": "workbench.action.toggleCenteredLayout"
  },
  {
    "key": "ctrl+shift+q",
    "command": "-sqlite.runDocumentQuery",
    "when": "editorLangId =~ /(sql|sqlite)/"
  },
  {
    "key": "ctrl+shift+q",
    "command": "sqlite.runSelectedQuery"
  },
  {
    "key": "ctrl+k a",
    "command": "wwm.aligncode"
  },
  {
    "key": "ctrl+k u",
    "command": "-workbench.action.closeUnmodifiedEditors"
  },
  {
    "key": "ctrl+k u",
    "command": "editor.action.transformToUppercase"
  },
  {
    "key": "ctrl+k l",
    "command": "editor.action.transformToLowercase"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+n",
    "command": "explorer.newFile"
  },
  {
    "key": "ctrl+alt+n",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+k b",
    "command": "yarn-script.build"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.createTerminalEditor"
  },
  {
    "key": "ctrl+shift+/",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k v",
    "command": "-dendron.togglePreview",
    "when": "dendron:pluginActive"
  },
  {
    "key": "ctrl+k s",
    "command": "-saveAll"
  },
  {
    "key": "ctrl+k s",
    "command": "git.sync"
  },
  {
    "key": "ctrl+k ctrl+a",
    "command": "-keybindings.editor.addKeybinding",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "ctrl+k ctrl+a",
    "command": "git.commitAll"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "toggle.window.commandCenter"
  },
  {
    "key": "ctrl+alt+f",
    "command": "workbench.action.quickTextSearch"
  },
  {
    "key": "ctrl+shift+`",
    "command": "workbench.action.terminal.new"
  },
  {
    "key": "ctrl+shift+`",
    "command": "terminal.focus"
  },
  {
    "key": "ctrl+alt+s",
    "command": "workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "ctrl+k s",
    "command": "-workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "ctrl+k g",
    "command": "gitlens.showGraphPage"
  },
  {
    "key": "alt+left",
    "command": "cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+u",
    "command": "-cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "alt+right",
    "command": "cursorRedo"
  },
  {
    "key": "ctrl+shift+alt+f5",
    "command": "editor.debug.action.runToCursor"
  },
  {
    "key": "shift+alt+pagedown",
    "command": "editor.action.focusNextCursor"
  },
  {
    "key": "shift+alt+pageup",
    "command": "editor.action.focusPreviousCursor"
  }
]
