# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

alias ls='ls -F --color=auto'
alias ll='ls -l'
alias la='ls -lA'
alias l='ls -C'

alias ag='sudo apt-get'
alias agr='ag remove'
export aguInterval=86400 # Every day

function agu () {
  ag update -y "$@"
  date > /tmp/lastAptUpdate
}

function maybeAGU () {
  if [ ! -f /tmp/lastAptUpdate ] ; then
    agu
  else
    lastUpdate=$(cat /tmp/lastAptUpdate)
    if [[ -z ${lastUpdate} ]] ; then
      agu
    else
      timeSince=$(($(($(date -d"${lastUpdate}" +%s) - $(date +%s))) * -1))
      if [[ ${timeSince} -gt ${aguInterval} ]] ; then
        agu
      fi
    fi
  fi
}

function agug () {
  maybeAGU
  ag upgrade -y "$@"
  agar
}

function agi () {
  maybeAGU
  ag install "$@"
}

function agar () {
  maybeAGU
  ag autoremove -y
}

function sudo () {
  local command=$@
  if [[ -n ${sudoConfirmed} ]] ; then
    YORN_RESP="Y"
  else
    echo -n "Shall command '$command' be executed as root? (y/N): "
    read -r
    local YORN_RESP="$(grep -i "[YN]" <<<"${REPLY:0:1}" || echo 'N')"
  fi

  if [[ "$YORN_RESP" == [Yy] ]]; then
    export sudoConfirmed="Y"
    command sudo "$@"
  else
    return 1
  fi
}

alias mkdir='mkdir -p'
alias rm='rm -r'
alias rsync='rsync -rlgopPEh --mkpath --info=PROGRESS2,STATS3,SKIP2'
alias rcp='rsync -e /dev/null -b --backup-dir="/tmp/rsync-$USERNAME"'
alias rmv='cp --remove-source-files'
